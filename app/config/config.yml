# global parameters
parameters:
    sonata.user.admin.groupname: sonata_user
    sonata.user.profile.form.type.class: Application\Sonata\UserBundle\Form\Type\ProfileType

imports:
    - { resource: database.php }
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }
    - { resource: doctrine_extensions.yml }

framework:
    #esi:             ~
    translator: ~
    secret:          "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: "%kernel.debug%"
    form:            true
    csrf_protection: true
    validation:      { enable_annotations: true }
    templating:      { engines: ['twig','php'] } #assets_version: SomeVersionScheme
    default_locale:  "%locale%"
    trust_proxy_headers: false # Whether or not the Request object should trust proxy headers (X_FORWARDED_FOR/HTTP_CLIENT_IP)
    session:
        # ...
        handler_id:     session.handler.pdo

# Twig Configuration
twig:
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"

# Assetic Configuration
assetic:
    debug:          "%kernel.debug%"
    use_controller: false
    bundles:        [ ]
    #java: /usr/bin/java
    filters:
        cssrewrite: ~
        #closure:
        #    jar: "%kernel.root_dir%/Resources/java/compiler.jar"
        #yui_css:
        #    jar: "%kernel.root_dir%/Resources/java/yuicompressor-2.4.7.jar"

# Doctrine Configuration
doctrine:
    dbal:
        driver:   "%database_driver%"
        host:     "%database_host%"
        port:     "%database_port%"
        dbname:   "%database_name%"
        user:     "%database_user%"
        password: "%database_password%"
        charset:  UTF8
        types:
            json: Sonata\Doctrine\Types\JsonType

    orm:
        entity_managers:
            default:
                mappings:
                  
                    ApplicationSonataUserBundle: ~
                    ApplicationSonataMediaBundle: ~
                    
                    FOSUserBundle: ~
                    SonataUserBundle: ~ 
                    SonataMediaBundle: ~
                    
                    TractrFormBundle: ~
                    
# Swiftmailer Configuration
swiftmailer:
    transport: "%mailer_transport%"
    #host:      "%mailer_host%"
    username:  "%mailer_user%"
    password:  "%mailer_password%"
    spool:     { type: memory }

knp_menu:
    twig: true
jms_security_extra:
    expressions: true

#sonata
sonata_cache:
    caches:
        esi:
            servers:
                - varnishadm -T 127.0.0.1:2000 {{ COMMAND }} "{{ EXPRESSION }}"

        #mongo:
        #    database:   cache
        #    collection: cache
        #    servers:
        #        - {host: 127.0.0.1, port: 27017, user: username, password: pASS'}
        #        - {host: 127.0.0.2}

        #memcached:
            # prefix to ensure there is no clash between instances
        #    prefix: test     
       #     servers:
       #         - {host: 127.0.0.1, port: 11211, weight: 0}

        #memcache:
            # prefix to ensure there is no clash between instances
        #    prefix: test     
       #     servers:
       #         - {host: 127.0.0.1, port: 11211, weight: 1}

        #apc:
       #     # token used to clear the related cache
       #     token:  s3cur3   
       #     # prefix to ensure there is no clash between instances
       #     prefix: test     
       #     servers:
       #         - { domain: kooqit.local, ip: 127.0.0.1, port: 80}

sonata_block:
    default_contexts: [cms]
    blocks:
        sonata.admin.block.admin_list:
            contexts:   [admin]

        sonata.block.service.text:
        sonata.block.service.action:
        sonata.block.service.rss:

sonata_admin:
    title:      APCM
    title_logo: /bundles/sonataadmin/logo_title.png
    templates:
        # default global templates
        layout:  SonataAdminBundle::standard_layout.html.twig
        ajax:    SonataAdminBundle::ajax_layout.html.twig

        # default actions templates, should extend a global templates
        list:    SonataAdminBundle:CRUD:list.html.twig
        show:    SonataAdminBundle:CRUD:show.html.twig
        edit:    SonataAdminBundle:CRUD:edit.html.twig

    dashboard:
        blocks:
            # display a dashboard block
            - { position: left, type: sonata.admin.block.admin_list }

            # Customize this part to add new block configuration
            #- { position: right, type: sonata.block.service.text, settings: { content: ""} }
            #- { position: right, type: sonata.block.service.rss, settings: { title: Castle Story RSS, url: http://sonata-project.org/blog/archive.rss }}

        groups: ~
        
sonata_media:
    default_context: default
    db_driver: doctrine_orm
    #class:
    #        media:              Teelt\MediaBundle\Entity\Media
    #        gallery:            Teelt\MediaBundle\Entity\Gallery
    #        gallery_has_media:  Teelt\MediaBundle\Entity\GalleryHasMedia
    contexts:
      default:  # the default context is mandatory
        providers:
          - sonata.media.provider.youtube
          - sonata.media.provider.image
            
        formats:
          # @TODO
          small: { width: 100 , quality: 70 }
          big:   { width: 500 , quality: 70 }       
        
    cdn:
        server:
            path: /uploads/media/

    filesystem:
        local:
            directory:  %kernel.root_dir%/../web/uploads/media
            create:     false

    providers:
        image:
            resizer:    sonata.media.resizer.square # sonata.media.resizer.square
            filesystem: sonata.media.filesystem.local
            cdn:        sonata.media.cdn.server
            generator:  sonata.media.generator.default
            thumbnail:  sonata.media.thumbnail.format
            
    buzz:
        connector:  sonata.media.buzz.connector.file_get_contents


sonata_user:
    security_acl:           false

    #impersonating:
    #    route:                page_slug
    #    parameters:           { path: / }

    class:                  # Entity Classes
        user:               Application\Sonata\UserBundle\Entity\User
        group:              Application\Sonata\UserBundle\Entity\Group

    #admin:                  # Admin Classes
    #    user:
    #        class:          Sonata\UserBundle\Admin\Entity\UserAdmin
    #        controller:     SonataAdminBundle:CRUD
    #        translation:    SonataUserBundle

    #    group:
    #        class:          Sonata\UserBundle\Admin\Entity\GroupAdmin
    #        controller:     SonataAdminBundle:CRUD
    #        translation:    SonataUserBundle


fos_user:
    db_driver: orm
    firewall_name: main
    user_class: Application\Sonata\UserBundle\Entity\User
    group:
        group_class: Application\Sonata\UserBundle\Entity\Group


    #profile:  # Authentication Form
    #    form:
    #        type:               fos_user_profile
    #        handler:            fos_user.profile.form.handler.default
    #        name:               fos_user_profile_form

        
sonata_notification:
    backend: sonata.notification.backend.runtime
    
# needed to reach paramters
application_sonata_user: ~

trsteel_ckeditor:
    class: Trsteel\CkeditorBundle\Form\Type\CkeditorType
    #toolbar: ['document', 'clipboard', 'editing', '/', 'basicstyles', 'paragraph', 'links', '/', 'insert', 'styles', 'tools']
    toolbar: ['basicstyles','links','paragraph','document']
    toolbar_groups:
        document: ['Source']
        clipboard: ['Cut','Copy','Paste','PasteText','PasteFromWord','-','Undo','Redo']
        editing: ['Find','Replace','-','SelectAll']
        basicstyles: ['Bold','Italic','Underline','-','RemoveFormat']
        paragraph: ['BulletedList','-','Outdent','Indent','-','JustifyLeft', 'JustifyCenter','JustifyBlock']
        links: ['Link','Unlink']
        insert: ['Image','Flash','Table','HorizontalRule']
        styles: ['Styles','Format']
        tools: ['Maximize', 'ShowBlocks']
    width: 500
    height: 300
    #skin: 'moono-light,/includes/cke-skins/moono/moono-light/'
    #skin: 'moono-light,/bundles/trsteelckeditor/skins/moono-light/'